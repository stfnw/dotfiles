global !p
# ideas and also specific snippets are initially/partly taken from
# https://castel.dev/post/lecture-notes-1/ (https://github.com/gillescastel/latex-snippets) licensed under MIT Copyright (c) 2019 Gilles Castel

def math():
    synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
    synstack = [ vim.eval("synIDattr({}, 'name')".format(i)) for i in synstackids ]

    for syn in reversed(synstack):
        if syn == 'texMathText':
            return False
        if syn.startswith('texMath'):
            return True

    return False


def optional_whitespace(t, argpos):
    word_delimiter = [',','.','?','!','-','_',' ','(','{','[','^']
    return ' ' if t[argpos] and t[argpos][0] not in word_delimiter else ''
endglobal


snippet today "Current date" w
`date +%F`
endsnippet
snippet now "Current timestamp" w
`date '+%F %T'`
endsnippet


################################################################################
# snippets for document templates ##############################################
################################################################################
snippet dp "Basic pdflatex document"
\documentclass[a4paper]{scrartcl}

\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[ngerman]{babel}

\usepackage{amsmath}
\usepackage{amssymb}

\usepackage{csquotes}

\usepackage[backend=biber,style=authoryear]{biblatex}
\addbibresource{literatur.bib}

\usepackage{lmodern}

\usepackage{scrlayer-scrpage}


\begin{document}
$0
\end{document}
endsnippet


snippet dx "Basic xelatex document"
\documentclass[a4paper]{scrartcl}

\usepackage{polyglossia}
\setmainlanguage{english}
\setotherlanguages{german}
\usepackage{fontspec}
\usepackage{xeCJK}

\usepackage{amsmath}

\usepackage{csquotes}

\usepackage[backend=biber,style=authoryear]{biblatex}
\addbibresource{literatur.bib}


\begin{document}
$0
\end{document}
endsnippet


snippet dl "Basic letter document"
\documentclass[a4paper]{scrlttr2}

\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[ngerman]{babel}

\usepackage[gen]{eurosym}

\usepackage{lmodern}

\setkomavar{fromname}{$1}
\setkomavar{fromaddress}{%
    $2
}
\setkomavar{fromphone}{$3}

\setlength{\parskip}{0.3cm plus4mm minus3mm}


\begin{document}

\sffamily

\begin{letter}{%
    $4
}


\setkomavar{subject}{%
    $5
}

\opening{$6}

\closing{Mit freundlichen Grüßen}

\end{letter}

\end{document}
endsnippet


snippet db "Basic beamer presentation document"
\documentclass[aspectratio=169]{beamer}

\usepackage{pgfpages}
% \setbeameroption{second mode text on second screen=left}
\setbeameroption{show notes on second screen=left}

%\usetheme{Boadilla}
\usetheme{Darmstadt}
%\usetheme{Montpellier}
%\usetheme{Rochester}

\usecolortheme{beaver}

\usefonttheme[onlymath]{serif}

\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[ngerman]{babel}

\usepackage{csquotes}

\usepackage[backend=biber,style=authoryear]{biblatex}
\addbibresource{literatur.bib}

\usepackage{lmodern}

\usepackage{array}
\usepackage{mathtools}

\usepackage{tikz}

% https://tex.stackexchange.com/questions/387012/how-can-i-show-the-numbering-of-slides-of-each-frame
\beamertemplatenavigationsymbolsempty
\newcounter{slideinframe}
\defbeamertemplate*{footline}{slide in frame number}{%
    \hfill%
    \usebeamercolor[fg]{page number in head/foot}%
    \usebeamerfont{page number in head/foot}%
    \ifnum\insertframeendpage>\insertframestartpage
        \setcounter{slideinframe}{\numexpr\thepage-\insertframestartpage+1}
        \insertframenumber{}\,-\,\theslideinframe
    \else
        \insertframenumber{}
    \fi%
    %\;/\;\inserttotalframenumber
        \kern1em\vskip2pt%
}

\title{$1}
\author{$2}
\institute{$3}
\date{$4}

\begin{document}

\frame[typeset second]{\only<second:0>{\titlepage}}

\begin{frame}{Motivation}
$0
\end{frame}

\end{document}
endsnippet


snippet ds "standalone document for testing"
\documentclass{standalone}

\begin{document}
$0
\end{document}
endsnippet

################################################################################

snippet up "usepacakge"
\usepackage{$1}
$0
endsnippet

snippet f2 "frame typeset second"
\begin{frame}[typeset second]
    \only<second>{
        $1
    }

    \only<second:0>{
        \frametitle{$2}
        $0
    }
\end{frame}
endsnippet

snippet ha "two minipages of half-pagewidth next to each other"
\begin{minipage}{0.45\textwidth}
    $1
\end{minipage}\hfill\begin{minipage}{0.45\textwidth}
    $0
\end{minipage}
endsnippet


snippet fig "figure"
\begin{figure}
    \centering
    \includegraphics[width=$1]{images/$2}
    \caption{$3}
    \label{fig:$4}
\end{figure}
endsnippet

snippet tab "table"
\begin{center}
	\begin{tabular}{$1}
		$0
	\end{tabular}
\end{center}
endsnippet



snippet title "create very basic title page"
\thispagestyle{empty}
\title{$1}
\date{$2}
\author{$3}

\maketitle

\pagebreak
endsnippet

snippet se "section" bA
\section{$1}

$0
endsnippet
snippet su "subsection" bA
\subsection{$1}

$0
endsnippet
snippet ssu "subsubsection" bA
\subsubsection{$1}

$0
endsnippet
snippet pg "paragraph" bA
\paragraph{$1}
$0
endsnippet

snippet mc "multicolumn" b
\begin{multicols}{$1}
$0
\end{multicols}
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
    $0
\end{$1}
endsnippet

snippet it "itemize"
\begin{itemize}
    \item $0
\end{itemize}
endsnippet

snippet en "enumerate"
\begin{enumerate}
    \item $0
\end{enumerate}
endsnippet

snippet de "description"
\begin{description}
    \item$0
\end{description}
endsnippet

snippet im "Inline Math" w
$$1$`!p snip.rv = optional_whitespace(t,2)`$2
endsnippet

snippet dm "Display Math" bA
\[
    $0
\]
endsnippet


################################################################################
# math-specific snippets #######################################################
################################################################################
context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet
context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '([a-zA-Z0-9^_\\]+)/' "Fraction (specific)" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
snippet '^.*\)/' "Fraction (paranthesis)" wrA
`!p
paren = 0
i = len(match.string) - 1
while True:
    if match.string[i] == ')': paren += 1
    if match.string[i] == '(': paren -= 1
    if paren == 0: break
    i -= 1
snip.rv = match.string[0:i] + "\\frac{" + match.string[i+1:-1] + '}'
`{$1}$0
endsnippet

context "math()"
snippet fa "forall" wA
\forall $1. $0
endsnippet
context "math()"
snippet ex "exists" wA
\exists $1. $0
endsnippet

context "math()"
snippet ti "times" w
\times 
endsnippet

context "math()"
snippet fb "math blackboard font" w
\mathbb{$1}`!p snip.rv = optional_whitespace(t,0)`$0
endsnippet

context "math()"
snippet fc "math calligraphic font" w
\mathcal{$1}`!p snip.rv = optional_whitespace(t,0)`$0
endsnippet

snippet al "align" w
\begin{align*}
	$0
\end{align*}
endsnippet

context "math()"
snippet es "emptyset" wA
\emptyset 
endsnippet

context "math()"
snippet os "overset" wA
\overset{$1}{$2} $0
endsnippet

context "math()"
snippet ub "underbrace" wA
\underbrace{$1}_{$2} $0
endsnippet

context "math()"
snippet te "text" w
\text{$1} $0
endsnippet


context "math()"
snippet => "implies" iA
\implies $0
endsnippet
context "math()"
snippet <= "impliedby" iA
\impliedby $0
endsnippet


context "math()"
snippet \( "balance round brackets / parentheses" iA
\left( $1 \right) $0
endsnippet
context "math()"
snippet \[ "balance square brackets / brackets" iA
\left[ $1 \right] $0
endsnippet
context "math()"
snippet s{ "balance curly brackets / braces" iA
\\{ $1 \\} $0
endsnippet
context "math()"
snippet \{ "balance curly brackets / braces" iA
\left\\{ $1 \right\\} $0
endsnippet
context "math()"
snippet \| "balance |" iA
\left| $1 \right| $0
endsnippet


context "math()"
snippet b( "balance round brackets / parentheses" iA
\Big( $1 \Big) $0
endsnippet
context "math()"
snippet b[ "balance square brackets / brackets" iA
\Big[ $1 \Big] $0
endsnippet
context "math()"
snippet b{ "balance curly brackets / braces" iA
\Big\\{ $1 \Big\\} $0
endsnippet
context "math()"
snippet b| "balance |" iA
\Big| $1 \Big| $0
endsnippet


context "math()"
snippet < "balance <" i
\langle $1 \rangle $0
endsnippet
context "math()"
snippet \< "balance <" iA
\left\langle $1 \right\rangle $0
endsnippet
context "math()"
snippet b< "balance <" iA
\Big\langle $1 \Big\rangle $0
endsnippet

snippet ( "balance round brackets / parentheses" iA
($1)`!p snip.rv = optional_whitespace(t,2)`$2
endsnippet
snippet [ "balance square brackets / brackets" iA
[$1]`!p snip.rv = optional_whitespace(t,2)`$2
endsnippet
snippet { "balance curly brackets / braces" iA
{$1}`!p snip.rv = optional_whitespace(t,2)`$2
endsnippet
snippet b| "balance |" iA
|$1|`!p snip.rv = optional_whitespace(t,2)`$2
endsnippet


context "math()"
snippet pm "matrix" w
\begin{pmatrix}$1\end{pmatrix} $0
endsnippet
################################################################################
